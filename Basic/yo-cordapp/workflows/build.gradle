apply plugin: 'net.corda.plugins.cordapp-cpk'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion 999
    minimumPlatformVersion 999
    workflow {
        name "yo Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

repositories {
    mavenLocal()
    maven {
        url "$artifactory_contextUrl/corda-dependencies-dev"
    }
    maven {
        url 'https://repository.mulesoft.org/nexus/content/repositories/public'
    }
}
sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda dependencies.
    cordaProvided "$corda_release_group:corda-core:$corda_core_release_version"
//    cordaRuntimeOnly "$corda_release_group:corda:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:4.5"

    // CorDapp dependencies.
    cordapp project(":contracts")
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}